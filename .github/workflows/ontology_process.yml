name: Updates to Ontology Files

on:
  push:
    paths:
      - '**/cellxgene_schema_cli/cellxgene_schema/ontology_files/gene_info.yml'
      - '**/cellxgene_schema_cli/cellxgene_schema/ontology_files/owl_info.yml'
    branches-ignore:
      - main

permissions:
  id-token: write
  contents: write

jobs:
  ontology-processing:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
      - name: ontology changes
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            owl_info:
              - 'cellxgene_schema_cli/cellxgene_schema/ontology_files/owl_info.yml'
            gene_info:
              - 'cellxgene_schema_cli/cellxgene_schema/ontology_files/gene_info.yml'
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Python cache
        uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: install requirements
        run: |
          pip install -r cellxgene_schema_cli/requirements.txt
      - name: setup git
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
      - name: owl-processing
        if: ${{ steps.filter.outputs.owl_info == 'true' }}
        run: |
          make download-ontologies -C cellxgene_schema_cli
          git add ./cellxgene_schema_cli/cellxgene_schema/ontology_files/all_ontology.json.gz
      - name: gene-processing
        if: ${{ steps.filter.outputs.gene_info == 'true' }}
        run: |
          make gene-processing -C cellxgene_schema_cli
          git add ./cellxgene_schema_cli/cellxgene_schema/ontology_files/genes_*.csv.gz
          git add ./cellxgene_schema_cli/cellxgene_schema/ontology_files/*_diff.txt
      - name: Commit
        if: ${{ steps.filter.outputs.gene_info == 'true'  || steps.filter.outputs.owl_info == 'true' }}
        run: |
          git commit -m "AUTO: update ontologies"
          git push

  ontology-dry-run:
    runs-on: ubuntu-latest
    needs: ontology-processing
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Python cache
        uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          pip install -r scripts/schema_bump_dry_run_ontologies/requirements.txt
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: us-west-2
          role-to-assume: ${{ secrets.AWS_PROD_ROLE_TO_ASSUME }}
          role-duration-seconds: 2700
      - name: Pull AWS Secrets
        uses: aws-actions/aws-secretsmanager-get-secrets@v1
        with:
          secret-ids:
            AUTH0_SECRETS, corpora/backend/prod/auth0-secret
      - name: Run Dry-Run Script
        run: python3 -m scripts.schema_bump_dry_run_ontologies.ontology_bump_dry_run
        env:
          corpus_env: "prod"
      - name: Store JSON with Replaced By Ontology Term Mappings
        uses: actions/cache/save@v3
        with:
          path: "./replaced-by.json"
          key: replaced-by-map
      - name: upload dry run to slack
        run: |
          curl -F file=@ontologies-curator-report.txt -F "initial_comment=Ontology Dry Run Report" -F channels=${{secrets.SLACK_CURATOR_REPORTING_CHANNEL}} -H "Authorization: Bearer ${{secrets.SLACK_CURATOR_REPORTING_APP_AUTH}}" https://slack.com/api/files.upload

  gencode-dry-run:
    runs-on: ubuntu-latest
    needs: ontology-processing
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.9
      - name: Python cache
        uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          pip install -r scripts/schema_bump_dry_run_genes/requirements.txt
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: us-west-2
          role-to-assume: ${{ secrets.AWS_PROD_ROLE_TO_ASSUME }}
          role-duration-seconds: 2700
      - name: Pull AWS Secrets
        uses: aws-actions/aws-secretsmanager-get-secrets@v1
        with:
          secret-ids:
            AUTH0_SECRETS, corpora/backend/prod/auth0-secret
      - name: Check if any GENCODE csv files have changed
        id: changed-files
        uses: tj-actions/changed-files@v36
        with:
          files: cellxgene_schema_cli/cellxgene_schema/ontology_files/*.csv.gz
      - name: Run Dry-Run Script
        if: steps.changed-files.outputs.any_changed == 'true'
        run: python3 -m scripts.schema_bump_dry_run_genes.gene_bump_dry_run
        env:
          corpus_env: "prod"
      - name: upload to slack
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          curl -F file=@genes-curator-report.txt -F "initial_comment=Gene Dry Run Report" -F channels=${{secrets
          .SLACK_CURATOR_REPORTING_CHANNEL}} -H "Authorization: Bearer ${{secrets.SLACK_CURATOR_REPORTING_APP_AUTH}}" https://slack.com/api/files.upload

  unit-tests:
    runs-on: ubuntu-latest
    needs: ontology-processing
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Python cache
        uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          pip install -r cellxgene_schema_cli/requirements.txt
          pip install pytest
      - name: Unit tests
        run: make unit-test
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
