name: Publish Minor Version of cellxgene_schema_cli to PyPI

on:
  push:
    branches:
      - main
    paths:
      - '**/cellxgene_schema_cli/cellxgene_schema/ontology_files/all_ontology.json.gz'
      - '**/cellxgene_schema_cli/cellxgene_schema/ontology_files/*.csv.gz'

permissions:
  contents: write
  pull-requests: write

jobs:
  publish-to-pypi:
    name: Build and publish Python distributions to PyPI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - name: setup git
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
      - name: Bump and tag release version
        run: |
          pip install bumpversion
          pip install wheel
          bumpversion --config-file .bumpversion.cfg minor --allow-dirty
          bumpversion --config-file .bumpversion.cfg prerel --allow-dirty --tag
          git push origin --tags
      - name: Build dist
        run: >-
          make pydist
      - name: Publish distribution to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository-url: https://test.pypi.org/legacy/
          packages-dir: cellxgene_schema_cli/dist/
      - name: Install and Test Package from Test PyPI
        run: |
          pip install --index-url https://test.pypi.org/simple/ cellxgene-schema
          cellxgene-schema validate cellxgene_schema_cli/tests/fixtures/h5ads/example_valid.h5ad
# TODO: Uncomment once ready to release to prod PyPI
#      - name: Publish distribution to PyPI
#        if: startsWith(github.ref, 'refs/tags')
#        uses: pypa/gh-action-pypi-publish@release/v1
#        with:
#          password: ${{ secrets.PYPI_API_TOKEN }}
#          package-dir: cellxgene_schema_cli/
      - name: Trigger rebuild of Data Portal Processing Image
        run: |
          curl -X POST https://api.github.com/repos/chanzuckerberg/single-cell-data-portal/dispatches \
          -H 'Accept: application/vnd.github.everest-preview+json' \
          --header 'authorization: Bearer ${{ secrets.CZIBUILDBOT_GITHUB_TOKEN }}' \
          --data '{"event_type": "rebuild-processing"}'

  generate-conversion-script:
    runs-on: ubuntu-latest
    needs: publish-to-pypi
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }} # checking out the lasted commit to this branch
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.11
      - name: Python cache
        uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          pip install -r migration_assistant/requirements.txt
      - name: Run Conversion Script Generator
        run: |
          make generate-conversion-script
      - name: Get Version
        id: get_version
        run: |
          echo "old_version=$(make show-current-version)" >> $GITHUB_ENV
      - name: setup git
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
      - name: Bump Version
        run: |
          pip install bumpversion
          pip install wheel
          bumpversion --config-file .bumpversion.cfg patch --allow-dirty
          bumpversion --config-file .bumpversion.cfg prerel --allow-dirty --tag
          echo "new_version=$(make show-current-version)" >> $GITHUB_ENV
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          commit-message: 'AUTO: update migrate.py schema_version ${{ env.old_version }}->${{ env.new_version }}'
          title: 'AUTO: update migrate.py schema_version ${{ env.old_version }}->${{ env.new_version }}'
          body: 'This is an automated PR to update migrate.py from schema_version ${{ env.old_version }}->${{ env.new_version }}.'
          branch: auto/update-convert-py-to-${{ env.new_version }}
          base: main
          reviewers: bento007 # TODO assign curators

